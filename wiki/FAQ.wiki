#summary Frequently Asked Question(s)
#labels Featured

* How to determine which Bluetooth stack is installed on my Windows?

  [http://bluecove.sourceforge.net/bluecove-examples/bluetooth-stack.html see this page]

* Where can I get help or support?

  [http://groups.google.com/group/bluecove-users/ Discussions and Questions here @ Goolge Groups: bluecove-users]

  [http://code.google.com/p/bluecove/issues/list Defects (bugs) should be submitted here @ Issues]


* Where can I find API-Documentation of the !BlueCove Library?

    !BlueCove is JSR-82, All JSR-82 API Documentation apply. See  [http://java.sun.com/javame/reference/apis/jsr082/ Java APIs for Bluetooth Wireless Technology]

    [http://bluecove.sourceforge.net/apidocs/index.html BlueCove Java docs]. For application it is not recommended to use any classes or API other than defined in JSR-82.

    Also these links may be useful
     * [http://forum.nokia.com/info/sw.nokia.com/id/0b51461e-5f77-40f4-b755-7915ad4d0e31/MIDP_Bluetooth_RFCOMM_Example_v1_0_en.zip.html Nokia Bluetooth RFCOMM and L2CAP Examples]
     * [http://forum.nokia.com/info/sw.nokia.com/id/125b7ff5-f2dd-4441-8cfe-59e23c006373/MIDP_Bluetooth_API_Developers_Guide_v2_0_en.pdf.html Nokia Bluetooth API Developer's Guide v2.0]
     * [http://www.jsr82.com/  JSR-82 Samples]

* Can I use !BlueCove Bluetooth stack to ...?

 !BlueCove is not Bluetooth Protocol Stack! !BlueCove is Java JSR-82 interface for following Bluetooth Profiles:
    * SDAP - Service Discovery Application Profile
    * RFCOMM - Serial Cable Emulation Protocol
    * L2CAP - Logical Link Control and Adaptation Protocol
    * OBEX - Generic Object Exchange Profile (GOEP) profile on top of RFCOMM and TCP

* Are there any books on Java and Bluetooth?

    * Bluetooth Application Programming with the Java APIs, by C Bala Kumar, Paul Kline, Tim Thompson
      [http://books.elsevier.com/us/mk/us/subindex.asp?maintarget=companions/defaultindividual.asp&isbn=1558609342&country=United%2BStates&srccode=&ref=&subcode=&head=&pdf=&basiccode=&txtSearch=&SearchField=&operator=&order=&community=mk Companion Website]  [http://books.elsevier.com/companions/1558609342/software/bluetooth_application_programming_with_the_java_apis_-_application_source_code.zip Source Code]

    * Bluetooth for Java, by Bruce Hopkins and Ranjith Antony
        [http://www.javabluetooth.com/index.html Companion Website]    [http://www.javabluetooth.com/jb_source.zip Source Code]

    * Bluetooth Essentials for Programmers, by Albert Huang and Larry Rudolph, ISBN-13: 9780521703758
        [http://www.btessentials.com/ Companion Website]


* Can I distribute a non-'open source' Java application that imports !BlueCove LGPL libraries?

    Yes. Your application's license needs to allow users to modify the library, and reverse engineer your code to debug these modifications, this is only for the purposes of replacing the LGPL code with a different version of the LGPL code. (LGPL section 6)
    This doesn't mean you need to provide source code or any details about the internals of your application.

    Q: But any reverse engineering of company's code (ie. that written by company) would be unacceptable! A: This is not true. Reverse engineering (decompilation-for-interoperability) is a right given by the law in Europe. In the US, the only legally working restriction on reverse engineering is the abominable DMCA. It prohibits reverse engineering, but only when used to circumvent copy protection.

    N.B. This is my (Vlad) personal opinion on licenses. For any questions contact your corporate lawyer.

* Can I make a non-'open source' modification to !BlueCove LGPL library?

    No. You should redistribute your modified version of library under the LGPL or GPL.
